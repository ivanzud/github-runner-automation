---
- name: Deploy GitHub Runner Automation - Production
  hosts: runner-hosts
  become: yes
  vars_files:
    - group_vars/runner-hosts/vault.yml

  tasks:
    - name: Create runner user
      user:
        name: "{{ runner_user }}"
        system: yes
        shell: /bin/bash
        home: "/home/{{ runner_user }}"
        create_home: yes
        state: present

    - name: Create necessary directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ runner_user }}"
        group: "{{ runner_user }}"
        mode: "0755"
      loop:
        - "{{ runner_work_dir }}"
        - "/opt/scripts"
        - "/var/log"

    - name: Install required packages
      apt:
        name:
          - jq
          - curl
          - git
          - python3
          - python3-pip
          - python3-venv
        state: present
        update_cache: yes

    - name: Copy production runner registration script
      copy:
        src: scripts/auto-register-runners-production.sh
        dest: "/opt/scripts/auto-register-runners.sh"
        mode: "0755"
        owner: root
        group: root

    - name: Create systemd service file
      template:
        src: templates/github-runner-auto-register.service.j2
        dest: /etc/systemd/system/github-runner-auto-register.service
        mode: "0644"
        owner: root
        group: root

    - name: Create systemd timer file
      template:
        src: templates/github-runner-auto-register.timer.j2
        dest: /etc/systemd/system/github-runner-auto-register.timer
        mode: "0644"
        owner: root
        group: root

    - name: Create register-github-runners symlink
      file:
        src: /opt/scripts/auto-register-runners.sh
        dest: /usr/local/bin/register-github-runners
        state: link
        owner: root
        group: root

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Stop and disable any existing automation
      systemd:
        name: github-runner-auto-register
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Enable and start automation timer
      systemd:
        name: github-runner-auto-register.timer
        state: started
        enabled: yes

    - name: Clean up old test runners from GitHub
      uri:
        url: "https://api.github.com/repos/{{ github_username }}/{{ item }}/actions/runners"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [200, 404]
      register: runners_response
      loop:
        - "selfhost"
      when: cleanup_old_runners | default(true)

    - name: Remove old test runners
      uri:
        url: "https://api.github.com/repos/{{ github_username }}/{{ item.0 }}/actions/runners/{{ item.1.id }}"
        method: DELETE
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [204, 404]
      loop: '{{ runners_response.results | map(''json_query'', ''[{repo: item.item, runners: .json.runners | select(. != null) | map(select(.name | contains("test-runner"))) | map({id: .id, name: .name})]}'') | list | map(''json_query'', ''[.repo, .runners[]]'') | flatten | list }}'
      when:
        - cleanup_old_runners | default(true)
        - item.1 is defined
        - item.1.id is defined

    - name: Test runner registration script
      command: /usr/local/bin/register-github-runners
      register: test_result
      changed_when: false

    - name: Display test result
      debug:
        msg: "{{ test_result.stdout_lines }}"
      when: test_result.stdout_lines is defined

    - name: Check automation status
      systemd:
        name: github-runner-auto-register.timer
      register: timer_status

    - name: Display automation status
      debug:
        msg:
          - "Automation Timer Status: {{ timer_status.status.ActiveState }}"
          - "Next Run: {{ timer_status.status.TriggerUSecMonotonic | default('Unknown') }}"
          - "Enabled: {{ timer_status.status.LoadState }}"

    - name: Check active runners
      uri:
        url: "https://api.github.com/repos/{{ github_username }}/{{ item }}/actions/runners"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [200, 404]
      register: active_runners
      loop:
        - "selfhost"

    - name: Display active runners
      debug:
        msg: "Repository {{ item.0 }}: {{ item.1.json.runners | default([]) | length }} runners"
      loop: "{{ active_runners.results | map('json_query', '[.item, .json]') | list }}"
